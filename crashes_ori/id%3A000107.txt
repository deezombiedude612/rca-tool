inputs/crashes/id%3A000107,src%3A000003,op%3Ahavoc,rep%3A16: warning: default output file same as input, using `nasm.out' for output
 [-w+other]
inputs/crashes/id%3A000107,src%3A000003,op%3Ahavoc,rep%3A16:1: warning: unterminated %[ construct [-w+other]
inputs/crashes/id%3A000107,src%3A000003,op%3Ahavoc,rep%3A16:2: warning: unterminated %[ construct [-w+other]
inputs/crashes/id%3A000107,src%3A000003,op%3Ahavoc,rep%3A16:2: warning: unterminated %[ construct [-w+other]
inputs/crashes/id%3A000107,src%3A000003,op%3Ahavoc,rep%3A16:5: warning: unterminated %[ construct [-w+other]
inputs/crashes/id%3A000107,src%3A000003,op%3Ahavoc,rep%3A16:5: warning: unterminated %[ construct [-w+other]
=================================================================
==12010==ERROR: AddressSanitizer: stack-use-after-scope on address 0x7fffdf0abc20 at pc 0x55ca5926692d bp 0x7fffdf0aba90 sp 0x7fffdf0aba80
WRITE of size 8 at 0x7fffdf0abc20 thread T0
    #0 0x55ca5926692c in expand_mmac_params asm/preproc.c:5373
    #1 0x55ca59262a8e in expand_mmac_params asm/preproc.c:5337
    #2 0x55ca59284c4b in pp_tokline asm/preproc.c:7258
    #3 0x55ca59284c4b in pp_getline asm/preproc.c:7328
    #4 0x55ca591d8b29 in main asm/nasm.c:628
    #5 0x7f4f21829d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)
    #6 0x7f4f21829e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)
    #7 0x55ca591dbc6d in _start (/home/deezombiedude/rca/13_nasm_2022-44370/nasm_fuzz+0x11bc6d)

Address 0x7fffdf0abc20 is located in stack of thread T0 at offset 256 in frame
    #0 0x55ca5926264f in expand_mmac_params asm/preproc.c:5188

  This frame has 10 object(s):
    [32, 36) 'fst' (line 5136)
    [48, 52) 'lst' (line 5136)
    [64, 72) 'tail' (line 5189)
    [96, 104) 'thead' (line 5189)
    [128, 136) 'ep' (line 5254)
    [160, 168) 'ep' (line 5272)
    [192, 200) 'newlist' (line 915)
    [224, 232) 'newlist' (line 915)
    [256, 264) 'newlist' (line 892) <== Memory access at offset 256 is inside this variable
    [288, 304) 't' (line 5376)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-use-after-scope asm/preproc.c:5373 in expand_mmac_params
Shadow bytes around the buggy address:
  0x10007be0d730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007be0d740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007be0d750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007be0d760: 00 00 00 00 f1 f1 f1 f1 04 f2 04 f2 00 f2 f2 f2
  0x10007be0d770: 00 f2 f2 f2 00 f2 f2 f2 00 f2 f2 f2 00 f2 f2 f2
=>0x10007be0d780: 00 f2 f2 f2[f8]f2 f2 f2 00 00 f3 f3 00 00 00 00
  0x10007be0d790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007be0d7a0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04 f2 04 f2
  0x10007be0d7b0: 00 f2 f2 f2 00 f2 f2 f2 00 f2 f2 f2 00 f2 f2 f2
  0x10007be0d7c0: 00 f2 f2 f2 00 f2 f2 f2 00 f2 f2 f2 00 00 f3 f3
  0x10007be0d7d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12010==ABORTING
